package eu.jangos.auth.model;
// Generated 06-mai-2016 20:54:54 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

/**
 * Roles generated by hbm2java
 */
@Entity
@Table(name="roles"
    ,catalog="jangosauth"
)
public class Roles  implements java.io.Serializable {


     private Integer id;
     private String name;
     private String description;
     private Set<Account> accounts = new HashSet<Account>(0);
     private Set<Commands> commandses = new HashSet<Commands>(0);

    public Roles() {
    }

	
    public Roles(String name, String description) {
        this.name = name;
        this.description = description;
    }
    public Roles(String name, String description, Set<Account> accounts, Set<Commands> commandses) {
       this.name = name;
       this.description = description;
       this.accounts = accounts;
       this.commandses = commandses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="id", unique=true, nullable=false)
    public Integer getId() {
        return this.id;
    }
    
    public void setId(Integer id) {
        this.id = id;
    }

    
    @Column(name="name", nullable=false, length=20)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="description", nullable=false, length=200)
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="account_roles", catalog="jangosauth", joinColumns = { 
        @JoinColumn(name="fk_roles", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="fk_account", nullable=false, updatable=false) })
    public Set<Account> getAccounts() {
        return this.accounts;
    }
    
    public void setAccounts(Set<Account> accounts) {
        this.accounts = accounts;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="commands_roles", catalog="jangosauth", joinColumns = { 
        @JoinColumn(name="fk_roles", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="fk_commands", nullable=false, updatable=false) })
    public Set<Commands> getCommandses() {
        return this.commandses;
    }
    
    public void setCommandses(Set<Commands> commandses) {
        this.commandses = commandses;
    }




}


